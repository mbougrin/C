{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
\margl1440\margr1440\vieww24460\viewh14580\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bonjour Madame, Monsieur\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Presentation\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 Voici le programme au nom de wordcount qui \'e0 pour b\'fbt de compter le nombre de m\'f4t, combien occurence du mot il y a eu et le nombre de mot total.\
Jai fait en sorte avoir le moins de fuite m\'e9moire et que mon programme sois le plus rapide possible pour les 4h impartie.\
j'ai \'e9ssayer \'e9crire un code le plus lisible possible et j'ai pu mettre des commentaire dans le code source.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Code source et Makefile\
J'ai organiser mon code les fichier source .c sont dans src et les fichier include .h sont dans include.\
Un Makefile est \'e0 disposition avec les r\'e8gles\
-make \'a0 \'a0 \'a0 \'a0 \'a0qui compile l'executable\
-make clean \'a0 \'a0qui efface tout les fichier .o\
-make fclean \'a0 qui efface tout les fichier .o et executable\
-make re \'a0 \'a0 \'a0 qui recompile l'executable\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 define size pour la taille de la table de hash si c'est des gros fichier\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Utilisation\
Le programme peut prendre en param\'e8tre plusieurs fichier, avec le -v verbose mode, le -l pour la barre de progression et le -m pour le modulo pour la table de hash.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Algorithme\
Pour algorithme je suis partie sur une table de hash avec gestion des conflit avec un double tableau de structure qui contient le nom ainsi que le compteur occurence du mot en question.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Implementation\
-j'ouvre mon fichier par fichier dans une boucle des argument\
-j'ouvre le fichier en question avec open\
-je r\'e9cup\'e8re ligne par ligne avec la fonction get_next_line que j'ai pu faire\
-je r\'e9cup\'e8re le mot question et sois je v\'e9rifie si il est present dans la table de hash sois je l'ajoute\
-je free la ligne de retour de get_next_line pour \'e9vite les perte memoire\
-je continue comme sa jusqu'a avoir fini lire tout les fichier donner en param\'e8tre du programme\
-ensuite j'affiche la liste des mot et le nombre occurence et je free ma liste en meme temps pour hevite les perte memoire\
-et j\'92affiche le total de nombre mot\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Optimisation (extensions possibles)\
-je pense en g\'e9rant mieux les conflit et en organisant mieux les donn\'e9e le programme il peut \'eatre plus optimiser\
-et je pense qui peut \'eatre plus rapide en \'e9vite le plus de boucle et appel system\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Test\
J'ai pu tester avec plusieurs fichier et plusieurs taille de fichier.\
j'ai fait les test sous la distribution linux debian et test sous macosx.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Efficacite\
J'ai essayer de faire une algorithme le plus rapide avec le temps impartie mais je pense qui peut allez plus rapide.\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 --------Compilation sans erreurs\
je compile avec un makefile avec les flags -Wall -Wextra -Werror\
}